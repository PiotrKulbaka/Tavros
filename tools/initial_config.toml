[paths]
root = "${builtin_root}"
build = "${builtin_root}/build"
assets = "${builtin_root}/assets"
sources = "${builtin_root}/sources"
docs = "${builtin_root}/docs"
tools = "${builtin_root}/tools"
third = "${builtin_root}/sources/third"
libs = "${builtin_root}/sources/libs"
wrappers = "${builtin_root}/sources/wrappers"
tests = "${builtin_root}/tests"
lib_core = "${paths.libs}/core"
lib_renderer = "${paths.libs}/renderer"
lib_system = "${paths.libs}/system"


[command.autoformat]
clang_format_tool_path = "${builtin_clang_format_tool_path}"
clang_format_style_file = "${builtin_root}/tools/.clang-format"
exts = [".cpp", ".hpp", ".h", ".c", ".inl", ".m", ".mm"]
include = [
    "${paths.lib_core}",
    "${paths.lib_renderer}",
    "${paths.lib_system}",
    "${paths.wrappers}/sandbox",
    "${paths.tests}/sources",
]
exclude = [
    # nothing to exclude
]


[command.collect_sources]
exts = [".cpp", ".hpp", ".c", ".h", ".inl", ".mm", ".m"]
test_exts = [".test.cpp", ".test.hpp"]
collect_paths = [
    "${paths.lib_core}",
    "${paths.lib_renderer}",
    "${paths.lib_system}",
    "${paths.wrappers}/sandbox",
    "${paths.tests}/sources",
]
exclude = [
    # nothing to exclude
]

[command.collect_sources.platform_subfolders]
apple = "platform/apple"
macos = "platform/macos"
ios = "platform/ios"
android = "platform/android"
win32 = "platform/win32"



[command.cmake_gen.xcode]
cmake_tool_path = "cmake"
generator = "Xcode"
architecture = ""
compile_options = [
    "-Wno-gnu-anonymous-struct",
    "-Wno-nested-anon-types",
]

[command.cmake_gen.vstudio]
cmake_tool_path = "cmake.exe"
generator = ""
architecture = "x64" # Win32 or ARM64

[command.cmake_gen.ninja]
cmake_tool_path = "cmake"
generator = "Ninja"
architecture = ""

[command.cmake_gen.makefiles]
cmake_tool_path = "cmake"
generator = "Unix Makefiles"
architecture = ""
